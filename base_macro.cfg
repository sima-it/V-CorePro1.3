## Different Park positions
[gcode_macro PARKFRONT]
description: Park head front high
gcode:
  SAVE_GCODE_STATE NAME=STATE_PARKFRONT
  G28 X0 Y0 Z0 ; home if not already homed
  G90   ; absolute positioning
  G0 X300 Y10 Z250 F18000
  RESTORE_GCODE_STATE NAME=STATE_PARKFRONT
   
[gcode_macro PARKREAR]
description: Park head rear high
gcode:
  SAVE_GCODE_STATE NAME=STATE_PARKREAR
  G28 X0 Y0 Z0 ; Home if not already homed
  G90   ; absolute positioning
  G0 X10 Y300 Z250 F18000
  RESTORE_GCODE_STATE NAME=STATE_PARKREAR
   
[gcode_macro PARKCENTER]
description: Park head middle of printer
gcode:
  SAVE_GCODE_STATE NAME=STATE_PARKCENTER
  G28 X0 Y0 Z0 ; Home if not already homed
  G90   ; absolute positioning
  G0 X150 Y150 Z250 F18000
  RESTORE_GCODE_STATE NAME=STATE_PARKCENTER
   
[gcode_macro PARKBED]
description: Park head middle of bed low
gcode:
  SAVE_GCODE_STATE NAME=STATE_PARKBED
  G28 X0 Y0 Z0 ; home if not already homed
  G90   ; absolute positioning
  G0 X150 Y150 Z30 F18000
  RESTORE_GCODE_STATE NAME=STATE_PARKBED
    
## use this if you need more then one action responeses in a order
## insight a macro
[gcode_macro _PRINT_AR]
description: Helper: Action response 
gcode:
  # set default parameter value
  {% set show_lcd = params.SHOW_LCD|default('false') %}
  {% if show_lcd == 'true' %}
    M117 {'%s' % (params.T|string)}
  {% endif %}
  {action_respond_info("%s" % (params.T|string))}
        
[gcode_macro _PRINT_TIME]
description: Helper: Print time for start macro
gcode:
  #set default parameter value
  {% set text = params.TEXT|default('Timer') %}
  {% set show_ar = params.SHOW_AR|default('false') %}
  {% set minutes = ((params.TIME|int / 60) % 60)|int %}
  {% set seconds = (params.TIME|int % 60)|int %}
  M117 {'%s' % (TEXT)} {minutes|int}:{'%02d' % (seconds|int)}
  {%if show_ar == 'true' %}
    {action_respond_info("%s %d:%02d" % (text,minutes|int,seconds|int))}
  {% endif %}      

[gcode_macro M204]
description: Set and limit acceleration to cfg value
rename_existing: M204.1
gcode:
  # get accel from parameter
  {% if 'S' in params %}
    {% set param_accel = params.S|float %}
  {% elif 'P' in params %}
    {% set param_accel = params.P|float %}
  {% elif 'T' in params %}
    {% set param_accel = params.T|float %}
  {% endif %}
  # calc accel_to deccel
  {% set param_accel_to_decel = (param_accel * 2.0 / 3.0) %}
  # get limits from config
  {% set max_accel = printer.configfile.settings.printer.max_accel|float %}
  {% set max_accel_to_decel = printer.configfile.settings.printer.max_accel_to_decel|float %}
  # limit values to config values 
  {% if param_accel < max_accel %}
    {% set accel = param_accel|int %}
  {% else %}
    {% set accel = max_accel|int %}
  {% endif%}
  {% if param_accel_to_decel < max_accel_to_decel %}
    {% set accel_to_decel = param_accel_to_decel|int %}
  {% else %}
    {% set accel_to_decel = max_accel_to_decel|int %}
  {% endif %}
  # end of definition
  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
  
[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set parameters = namespace(output = 'mcu build version: \n') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set show = ['mcu_version'] %}
      {% if name2 is in show %}
        {% set param = "%s: %s" % (name1, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}
  M115.1

[gcode_macro G34]
gcode:
    BED_MESH_CLEAR
    # Home the extruder and bed
    G28 X0 Y0 Z0                   
    # Trim the bed
    Z_TILT_ADJUST
    # rehome Z
    MOVE_HOMING_POSITION
    G28 Z 

[gcode_macro M600]
gcode:
    {% set X = params.X|default(280)|float %}
    {% set Y = params.Y|default(10)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    UNLOAD_FILAMENT
    _LCD_KNOB COLOR=BLUE BLINK=1
    RESTORE_GCODE_STATE NAME=M600_state
 
[gcode_macro LOAD_FILAMENT]
gcode:
 M117 Loading Filament...
 G92 E0.0
 G91
 G1 E40 F400
 G1 E30 F400
 G1 E60 F200
 G90
 G92 E0.0
 M400
 _PRINT_AR T="Load Complete"
 UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
 
[gcode_macro UNLOAD_FILAMENT]
gcode:
 M117 Unloading Filament...
 G92 E0.0
 G91
 G0 E-5 F3600        ;extract filament to cold end area
 G4 P3000               ;wait for three seconds
 G0 E5 F3600         ;push back the filament to smash any stringing 
 G0 E-15 F3600      ;Extract back fast in the cold zone 
 G0 E-90 F300        ;Continue extraction slowly, allow the filament time to cool solid before it 
 G90
 G92 E0.0
 M400
 _PRINT_AR T="Remove Filament Now!"
 M300 S300 P1000
 UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 280    # edit to your preferred park position
default_parameter_Y: 0   # edit to your preferred park position
default_parameter_Z: 10     # edit to your preferred park position
default_parameter_E: 1      # edit to your preferred retract length
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    _LCD_KNOB COLOR=BLUE
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      # edit to your preferred retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    _LCD_KNOB COLOR=GREEN
    BASE_RESUME
    

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power", device="tasmota_plug", state="off")}

[gcode_macro POWER_ON_PRINTER]
gcode:
  {action_call_remote_method("set_device_power", device="tasmota_plug", state="on")}  

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  TURN_OFF_MOTORS
  TURN_OFF_HEATERS
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=50
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60     

[gcode_macro TURN_OFF_MOTORS]
gcode:
  M84 X Y Z E